// Copyright (C) 2016  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "09/10/2023 20:51:23"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Lab1_1
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Lab1_1_vlg_vec_tst();
// constants                                           
// general purpose registers
reg sw0;
reg sw1;
reg sw2;
// wires                                               
wire led0;
wire led1;
wire led2;
wire led3;
wire led4;
wire led5;
wire led6;
wire led7;
wire led8;
wire led9;

// assign statements (if any)                          
Lab1_1 i1 (
// port map - connection between master ports and signals/registers   
	.led0(led0),
	.led1(led1),
	.led2(led2),
	.led3(led3),
	.led4(led4),
	.led5(led5),
	.led6(led6),
	.led7(led7),
	.led8(led8),
	.led9(led9),
	.sw0(sw0),
	.sw1(sw1),
	.sw2(sw2)
);
initial 
begin 
#1000000 $finish;
end 

// sw0
initial
begin
	sw0 = 1'b0;
	sw0 = #400000 1'b1;
	sw0 = #400000 1'b0;
end 

// sw1
initial
begin
	repeat(2)
	begin
		sw1 = 1'b0;
		sw1 = #200000 1'b1;
		# 200000;
	end
	sw1 = 1'b0;
end 

// sw2
always
begin
	sw2 = 1'b0;
	sw2 = #100000 1'b1;
	#100000;
end 
endmodule

